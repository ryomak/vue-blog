(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{329:function(t,s,n){"use strict";n.r(s);var a=n(1),o=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("p",[n("a",{attrs:{href:"https://hackernoon.com/learn-blockchains-by-building-one-117428612f46",target:"_blank",rel:"noopener noreferrer"}},[t._v("この記事"),n("OutboundLink")],1),t._v("がPythonで書かれている為，この記事を参考にしながらGo言語で実装しました")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),n("p",[t._v("このブロックチェーンの機能にhttp通信でかつJson形式で利用てきるよう実装しているので\n"),n("a",{attrs:{href:"https://github.com/ryomak/blockchain-with-go/blob/master/controller/controller.go",target:"_blank",rel:"noopener noreferrer"}},[t._v("このレポジトリ"),n("OutboundLink")],1),t._v("を参照してください")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"blockchainをgoで実装してみた"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#blockchainをgoで実装してみた","aria-hidden":"true"}},[this._v("#")]),this._v(" blockchainをGoで実装してみた")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"はじめに"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#はじめに","aria-hidden":"true"}},[this._v("#")]),this._v(" はじめに")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"実装機能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#実装機能","aria-hidden":"true"}},[this._v("#")]),this._v(" 実装機能")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("Proof Of Work")]),t._v(" "),n("li",[t._v("コイン量計算")]),t._v(" "),n("li",[t._v("他のノードとつなぐ")]),t._v(" "),n("li",[t._v("他のノードとチェーンを比較する")]),t._v(" "),n("li",[t._v("マイニング")]),t._v(" "),n("li",[t._v("トランザクション追加")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"blockchainの構造"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#blockchainの構造","aria-hidden":"true"}},[this._v("#")]),this._v(" Blockchainの構造")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Blockchain "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tChain              "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Block \n\tCurrentTransactions "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Transaction\n\tNodes              "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Block "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tIndex        "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\tTimestamp    "),n("span",{attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n\tTransactions  "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Transaction\n\tProof        "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\tPreviousHash "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Transaction "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tSender    "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tRecipient "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tAmount    "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"blockchainの機能全コード"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#blockchainの機能全コード","aria-hidden":"true"}},[this._v("#")]),this._v(" Blockchainの機能全コード")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" blockchain\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"crypto/sha256"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"encoding/hex"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"encoding/json"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"errors"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"strconv"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"strings"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" FullChain "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tChain  "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Block "),n("span",{attrs:{class:"token string"}},[t._v('`json:"chain"`')]),t._v("\n\tLength "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),t._v("     "),n("span",{attrs:{class:"token string"}},[t._v('` json:"length"`')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Blockchain "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tChain              "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Block \n\tCurrentTransactions "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Transaction\n\tNodes              "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Block "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tIndex        "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\tTimestamp    "),n("span",{attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n\tTransactions  "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Transaction\n\tProof        "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\tPreviousHash "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Transaction "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tSender    "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tRecipient "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tAmount    "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" WORKLEVEL "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Init")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tbc "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tbc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("NewBlock")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("100")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"1"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bc\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("NewBlock")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proof "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" previousHash "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Block "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pg "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("previousHash"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpg "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" previousHash"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpg "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Hash")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tblock "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" Block"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tIndex"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tTimestamp"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    time"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Now")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Unix")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tTransactions"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentTransactions"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tProof"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        proof"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tPreviousHash"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pg"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tbc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentTransactions "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Transaction"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tbc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("append")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" block"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" block\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("LastBlock")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Block "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("NewTransaction")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sender"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" recipient "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amount "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("GetAmount")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sender"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v("<")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" sender "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"0"')]),n("span",{attrs:{class:"token comment"}},[t._v("/*minus amount  &&!genesis*/")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tbc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentTransactions "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("append")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentTransactions"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Transaction"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tSender"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    sender"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tRecipient"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" recipient"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tAmount"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("LastBlock")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Index "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Hash")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block Block"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tblockString"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" json"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Marshal")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token function"}},[t._v("panic")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\thashData "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sha256"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Sum256")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token function"}},[t._v("byte")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blockString"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" hex"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("EncodeToString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hashData"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("RegisterNode")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tres"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Get")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"/chain"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusCode "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" err\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("_")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Nodes "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" v "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" address "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" errors"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("New")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"すでに登録されています"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tbc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Nodes "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("append")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Nodes"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nunc "),n("span",{attrs:{class:"token function"}},[t._v("ValidProof")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastProof"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" proof "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" level "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tguess "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token function"}},[t._v("byte")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strconv"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Itoa")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastProof"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" strconv"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Itoa")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proof"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\thashData "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sha256"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Sum256")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("guess"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tguessHash "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" hex"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("EncodeToString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hashData"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" guessHash"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("level"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" strings"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"0"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" level"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("ValidChain")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chain "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Block"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlastBlock "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" chain"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tcurrentIndex "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" currentIndex "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tblock "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" chain"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("currentIndex"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" block"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PreviousHash "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Hash")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastBlock"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token function"}},[t._v("ValidProof")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastBlock"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Proof"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" block"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Proof"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" WORKLEVEL"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tguess "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token function"}},[t._v("byte")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strconv"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Itoa")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastBlock"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Proof"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" strconv"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Itoa")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Proof"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\thashData "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sha256"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Sum256")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("guess"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tguessHash "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" hex"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("EncodeToString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hashData"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("guessHash"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastBlock"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Proof"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Proof"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tlastBlock "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" block\n\t\tcurrentIndex"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("ProofOfWork")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastProof"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" level "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tproof "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token function"}},[t._v("ValidProof")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastProof"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" proof"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" level"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tproof"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" proof\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("ResolveConflicts")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tneighbours "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Nodes\n\tnewChain "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Block"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tmaxLength "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("_")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" neighbours "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tres"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Get")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"/chain"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Error")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusCode "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Error")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fullChain FullChain\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" json"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("NewDecoder")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Body"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Decode")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("fullChain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Error")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fullChain"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{attrs:{class:"token string"}},[t._v('":"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("maxLength"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{attrs:{class:"token string"}},[t._v('":"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ValidChain")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fullChain"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" fullChain"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" maxLength "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ValidChain")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fullChain"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tmaxLength "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" fullChain"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length\n\t\t\tnewChain "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" fullChain"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newChain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tbc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" newChain\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bc "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("Blockchain"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token function"}},[t._v("GetAmount")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nodeIdent "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tamount "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("_")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" bc"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Chain"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("_")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" v"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Transactions"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" t"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sender "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" nodeIdent"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tamount "),n("span",{attrs:{class:"token operator"}},[t._v("-=")]),t._v(" t"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Amount\n\t\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" t"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Recipient "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" nodeIdent"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tamount "),n("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" t"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Amount\n\t\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" amount\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"さいごに"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#さいごに","aria-hidden":"true"}},[this._v("#")]),this._v(" さいごに")])}],!1,null,null,null);o.options.__file="blockchain-with-go.md";s.default=o.exports}}]);